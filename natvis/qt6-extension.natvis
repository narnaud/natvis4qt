<?xml version="1.0" encoding="utf-8"?>

<AutoVisualizer xmlns="http://schemas.microsoft.com/vstudio/debugger/natvis/2010">
    <UIVisualizer ServiceId="{A452AFEA-3DF6-46BB-9177-C0B08F318025}" Id="1"
            MenuName="Add to Image Watch"/>

    <!--************************************************************************************************
    Copyright (C) Nic Holthaus
    SPDX-License-Identifier: MIT
    *************************************************************************************************-->

    <Type Name="QHostAddress">
        <Intrinsic Name="a" Expression="(*(quint32**)&amp;d)[12]" />
        <Intrinsic Name="a6" Expression="(*(unsigned char**)&amp;d)[32+offset]">
            <Parameter Name="offset" Type="quint8" />
        </Intrinsic>
        <Intrinsic Name="protocol" Expression="(*(char**)&amp;d)[52]" />
        <Intrinsic Name="isIpv4"
            Expression="protocol()==QAbstractSocket::NetworkLayerProtocol::IPv4Protocol" />
        <Intrinsic Name="isIpv6"
            Expression="protocol()==QAbstractSocket::NetworkLayerProtocol::IPv6Protocol" />
        <Intrinsic Name="rshift" Expression="(value&gt;&gt;by)&amp;0xff">
            <Parameter Name="value" Type="quint32" />
            <Parameter Name="by" Type="quint32" />
        </Intrinsic>
        <Intrinsic Name="lshift" Expression="(value&lt;&lt;by)">
            <Parameter Name="value" Type="quint8" />
            <Parameter Name="by" Type="quint8" />
        </Intrinsic>
        <DisplayString Condition="isIpv4()">
            {rshift(a(),24),d}.{rshift(a(),16),d}.{rshift(a(),8),d}.{rshift(a(),0),d}</DisplayString>
        <DisplayString Condition="isIpv6()">{(unsigned
            short)(lshift(0xffff&amp;a6(0),8)|a6(1)),nvoXb}:{(unsigned
            short)(lshift(0xffff&amp;a6(2),8)|a6(3)),nvoXb}:{(unsigned
            short)(lshift(0xffff&amp;a6(4),8)|a6(5)),nvoXb}:{(unsigned
            short)(lshift(0xffff&amp;a6(6),8)|a6(7)),nvoXb}:{(unsigned
            short)(lshift(0xffff&amp;a6(8),8)|a6(9)),nvoXb}:{(unsigned
            short)(lshift(0xffff&amp;a6(10),8)|a6(11)),nvoXb}:{(unsigned
            short)(lshift(0xffff&amp;a6(12),8)|a6(13)),nvoXb}:{(unsigned
            short)(lshift(0xffff&amp;a6(14),8)|a6(15)),nvoXb}
        </DisplayString>
        <Expand>
            <Item Name="scopeId">*((QString*)((*(char**)&amp;d)+8))</Item>
            <Item Name="protocol">(QAbstractSocket::NetworkLayerProtocol)protocol()</Item>
        </Expand>
    </Type>

    <!--************************************************************************************************
    Copyright (C) KlarÃ¤lvdalens Datakonsult AB, a KDAB Group company <info@kdab.com>
    SPDX-License-Identifier: MIT
    *************************************************************************************************-->

    <Type Name="QDate" Priority="MediumHigh">
        <!-- formula from https://aa.usno.navy.mil/faq/JD_formula -->
        <Intrinsic Name="L1" Expression="jd + 68569" />
        <Intrinsic Name="N" Expression="4 * L1() / 146097" />
        <Intrinsic Name="L2" Expression="L1() - (146097 * N() + 3) / 4" />
        <Intrinsic Name="I1" Expression="4000 * (L2() + 1) / 1461001" />
        <Intrinsic Name="L3" Expression="L2() - 1461 * I1() / 4 + 31" />
        <Intrinsic Name="J1" Expression="80 * L3() / 2447" />
        <Intrinsic Name="day" Expression="L3() - 2447 * J1() / 80" />
        <Intrinsic Name="L4" Expression="J1() / 11" />
        <Intrinsic Name="month" Expression="J1() + 2 - 12 * L4()" />
        <Intrinsic Name="year" Expression="100 * (N() - 49) + I1() + L4()" />
        <DisplayString Condition="month()&lt;10 &amp;&amp; day()&lt;10">{year()}-0{month()}-0{day()}</DisplayString>
        <DisplayString Condition="month()&lt;10">{year()}-0{month()}-{day()}</DisplayString>
        <DisplayString Condition="day()&lt;10">{year()}-{month()}-0{day()}</DisplayString>
        <DisplayString>{year()}-{month()}-{day()}</DisplayString>
        <Expand>
            <Item Name="[year]">year()</Item>
            <Item Name="[month]">month()</Item>
            <Item Name="[day]">day()</Item>
        </Expand>
    </Type>

    <Type Name="QImage" Priority="Low">
        <UIVisualizer ServiceId="{A452AFEA-3DF6-46BB-9177-C0B08F318025}" Id="1" />
    </Type>
    <Type Name="QImage">
        <Intrinsic Name="p" Optional="true" Expression="(qwindowsd.dll!QImageData*)d" />
        <Intrinsic Name="p" Optional="true" Expression="(Qt6Guid.dll!QImageData*)d" />
        <Intrinsic Name="p" Optional="true" Expression="(Qt6Gui.dll!QImageData*)d" />
        <DisplayString Condition="d" Optional="true">{{ {p()-&gt;width}x{p()-&gt;height} }}</DisplayString>
        <DisplayString>empty</DisplayString>
        <Expand>
            <Item Optional="true" Name="[width]">p()-&gt;width</Item>
            <Item Optional="true" Name="[height]">p()-&gt;height</Item>
            <Item Optional="true" Name="[data]">p()-&gt;data,[p()-&gt;bytes_per_line * p()-&gt;height]</Item>
            <Item Optional="true" Name="[stride]">p()-&gt;bytes_per_line</Item>
            <Synthetic Name="[type]">
                <DisplayString>UINT8</DisplayString>
            </Synthetic>
            <Item Optional="true" Name="[channels]">p()-&gt;bytes_per_line / p()-&gt;width</Item>
        </Expand>
    </Type>

    <Type Name="QPixmap" Priority="Low">
        <UIVisualizer ServiceId="{A452AFEA-3DF6-46BB-9177-C0B08F318025}" Id="1" />
    </Type>
    <Type Name="QPixmap">
        <Intrinsic Name="d" Optional="true" Expression="*(Qt6Guid.dll!QRasterPlatformPixmap**)&amp;data" />
        <Intrinsic Name="d" Optional="true" Expression="*(Qt6Gui.dll!QRasterPlatformPixmap**)&amp;data" />
        <DisplayString Condition="d()" Optional="true">{{ {d()-&gt;w}x{d()-&gt;h} }}</DisplayString>
        <DisplayString>empty</DisplayString>
        <Expand>
            <ExpandedItem>d()-&gt;image</ExpandedItem>
        </Expand>
    </Type>

    <!--************************************************************************************************
    Copyright (C) Nerixyz
    SPDX-License-Identifier: MIT
    *************************************************************************************************-->

    <Type Name="QFlags&lt;*&gt;">
        <DisplayString>{($T1)i}</DisplayString>
        <Expand>
            <Item Name="[value]">($T1)i</Item>
        </Expand>
    </Type>

    <!-- The following types require debug symbols to be loaded. -->
    <Type Name="QDir">
        <Intrinsic Name="d" Optional="true" Expression="*(Qt6Cored.dll!QDirPrivate**)&amp;d_ptr"></Intrinsic>
        <Intrinsic Name="d" Optional="true" Expression="*(Qt6Core.dll!QDirPrivate**)&amp;d_ptr"></Intrinsic>
        <DisplayString>{d()-&gt;dirEntry.m_filePath}</DisplayString>
        <Expand>
            <ExpandedItem>d()</ExpandedItem>
        </Expand>
    </Type>

    <Type Name="QFileInfo">
        <Intrinsic Name="d" Optional="true"
            Expression="*(Qt6Cored.dll!QFileInfoPrivate**)&amp;d_ptr"></Intrinsic>
        <Intrinsic Name="d" Optional="true" Expression="*(Qt6Core.dll!QFileInfoPrivate**)&amp;d_ptr"></Intrinsic>
        <DisplayString>{d()-&gt;fileEntry.m_filePath}</DisplayString>
        <Expand>
            <ExpandedItem>d()</ExpandedItem>
        </Expand>
    </Type>

    <Type Name="QFile">
        <Intrinsic Name="d" Optional="true" Expression="*(Qt6Cored.dll!QFilePrivate**)&amp;d_ptr"></Intrinsic>
        <Intrinsic Name="d" Optional="true" Expression="*(Qt6Core.dll!QFilePrivate**)&amp;d_ptr"></Intrinsic>
        <DisplayString>{d()-&gt;fileName}</DisplayString>
        <Expand>
            <ExpandedItem>d()</ExpandedItem>
        </Expand>
    </Type>

    <Type Name="QDateTime">
        <Intrinsic Name="priv" Expression="(Qt6Cored.dll!QDateTimePrivate*)d.d"></Intrinsic>
        <Intrinsic Name="status" Expression="((uintptr_t)d.d) &amp; 1 ? ((uintptr_t)d.d &amp; 0xff) : priv()-&gt;m_status.i"></Intrinsic>
        <Intrinsic Name="spec" Expression="(status() &amp; Qt6Cored.dll!QDateTimePrivate::TimeSpecMask) &gt;&gt; Qt6Cored.dll!QDateTimePrivate::TimeSpecShift"></Intrinsic>
        <Intrinsic Name="msecs" Expression="((uintptr_t)d.d) &amp; 1 ? ((uintptr_t)d.d &gt;&gt; 8) : priv()-&gt;m_msecs"></Intrinsic>
        <Intrinsic Name="offset" Expression="priv()-&gt;m_offsetFromUtc"></Intrinsic>
        <Intrinsic Name="absOffset" Expression="offset() &lt; 0 ? -offset() : offset()"></Intrinsic>
        <Intrinsic Name="isLocalShort" Expression="spec() == Qt::TimeSpec::LocalTime &amp;&amp; status() &amp; 1"></Intrinsic>

        <!-- https://howardhinnant.github.io/date_algorithms.html#civil_from_days -->
        <Intrinsic Name="z"     Expression="(msecs() / (24 * 60 * 60 * 1000ull)) + 719468"/>
        <Intrinsic Name="era"   Expression="(z() &gt;= 0 ? z() : z() - 146096) / 146097"/>
        <Intrinsic Name="doe"   Expression="(unsigned)(z() - era() * 146097)"/>
        <Intrinsic Name="yoe"   Expression="(doe() - doe()/1460 + doe()/36524 - doe()/146096) / 365"/>
        <Intrinsic Name="doy"   Expression="doe() - (365*yoe() + yoe()/4 - yoe()/100)"/>
        <Intrinsic Name="mp"    Expression="(5*doy() + 2)/153"/>
        <Intrinsic Name="day"   Expression="doy() - (153*mp()+2)/5 + 1"/>
        <Intrinsic Name="month" Expression="mp() &lt; 10 ? mp()+3 : mp()-9"/>
        <Intrinsic Name="year"  Expression="((long long)yoe()) + era() * 400 + (month() &lt; 2)"/>

        <DisplayString ExcludeView="RecZone;RecZoneAbs">
            {year(),d}-{month()/10,d}{month()%10,d}-{day()/10,d}{day()%10,d} {
                (msecs() % (24 * 60 * 60 * 1000ull))/(10 * 60 * 60 * 1000ull),d
            }{
                ((msecs() % (24 * 60 * 60 * 1000ull))/(60 * 60 * 1000ull)) % 10,d
            }:{
                (msecs() % (60 * 60 * 1000ull))/(10 * 60 * 1000ull),d
            }{
                (msecs() % (10 * 60 * 1000ull)) / (60 * 1000ull),d
            }:{
                (msecs() % (60 * 1000ull)) / (10 * 1000ull),d
            }{
                (msecs() % (10 * 1000ull)) / 1000ull,d
            }.{
                (msecs() % 1000) / 100,d
            }{
                (msecs() % 100) / 10,d
            }{
                msecs() % 10,d
            } {this,view(RecZone)na}
        </DisplayString>
        <DisplayString IncludeView="RecZone" Condition="spec() == Qt::TimeSpec::UTC">UTC</DisplayString>
        <DisplayString IncludeView="RecZone" Condition="isLocalShort()">Local Time</DisplayString>
        <DisplayString IncludeView="RecZone" Condition="offset() &lt; 0">
            UTC-{this,view(RecZoneAbs)na}
        </DisplayString>
        <DisplayString IncludeView="RecZone">
            UTC+{this,view(RecZoneAbs)na}
        </DisplayString>
        <DisplayString IncludeView="RecZoneAbs" Condition="offset() % 3600 == 0">
            {absOffset() / (60 * 60 * 10),d}{(absOffset() % (60 * 60 * 10)) / (60 * 60),d}
        </DisplayString>
        <DisplayString IncludeView="RecZoneAbs" Condition="offset() % 60 == 0">
            {
                absOffset() / (60 * 60 * 10),d}{(absOffset() % (60 * 60 * 10)) / (60 * 60),d
            }:{
             (absOffset() % (60 * 60)) / (60 * 10),d}{(absOffset() % (60 * 10)) / 60,d
            }
        </DisplayString>
        <DisplayString IncludeView="RecZoneAbs">
            {
                absOffset() / (60 * 60 * 10),d}{(absOffset() % (60 * 60 * 10)) / (60 * 60),d
            }:{
                (absOffset() % (60 * 60)) / (60 * 10),d}{(absOffset() % (60 * 10)) / 60,d
            }:{
                (absOffset() % 60) / 10,d}{absOffset() % 10,d
            }
        </DisplayString>

        <Expand>
            <Item Name="[ms]">msecs()</Item>
            <Item Name="[s]">msecs()/1000</Item>
            <Synthetic Name="[offset]" Condition="spec() == Qt::TimeSpec::UTC">
                <DisplayString>UTC</DisplayString>
            </Synthetic>
            <Synthetic Name="[offset]" Condition="isLocalShort()">
                <DisplayString>Local Time</DisplayString>
            </Synthetic>
            <Item Name="[offset-sec]" Condition="spec() != Qt::TimeSpec::UTC &amp;&amp; !isLocalShort()">absOffset()</Item>
        </Expand>
    </Type>

</AutoVisualizer>
